from typing import Dict, List

import requests
import urllib.parse


def get_plain_dataframe() -> List[Dict]:
    # dataframe also can be generated by pandas csv reader or keqing

    mode_load_method = "network"
    query_option_type = (
        "[amenity=university]"  # college, school, research_institute
    )
    query_option_key = [
        "amenity",
        "name",
        "name:en",
        "short_name",
        "addr:province",
        "operators",
    ]

    OVERPASS_QL_ENDPOINT = (
        "https://overpass.ogf.rent-a-planet.com/api/interpreter?data="
    )
    OVERPASS_QL_CONTENT = """
[out:csv(
    ::type,
    ::id,{{键}};
    true; "|"
)];

nwr{{类型}}{{边界}};

out meta asc;
"""
    with open("../assets/" + "hx.overpassql_poly", "r") as f:
        OVERPASS_QL_POLY = f.read()

    OVERPASS_QL_URL = OVERPASS_QL_ENDPOINT + urllib.parse.quote(
        OVERPASS_QL_CONTENT.replace(
            "{{键}}", ",".join(['"' + i + '"' for i in query_option_key])
        )
        .replace("{{类型}}", query_option_type)
        .replace("{{边界}}", OVERPASS_QL_POLY.replace("\n", ""))
    )

    query_result = requests.get(
        url=OVERPASS_QL_URL,
        headers={
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0",
            "Referer": "https://registry.moe.gov.hx/index.html",
        },
    ).content.decode("utf-8")
    # # It is not recommended to read the text directly, but it is recommended to read the network directly and request
    # query_result="""@type|@id|amenity|name|name:en|short_name|addr:province|operator
    # relation|348353|university|国立上京大学|National Shangjing University|NSJU||
    # """

    print(OVERPASS_QL_URL)

    header = query_result.split("\n")[0].split("|")
    df_raw = query_result.replace(str("|".join(header) + "\n"), "")

    df: List[Dict] = [
        dict(zip(header, item.split("|")))
        for item in list(filter(bool, df_raw.split("\n")))
    ]

    return df
